{"version":3,"file":"index.js","sources":["../src/components/editor.tsx","../src/components/previewHtml.tsx","../src/components/pdf.tsx"],"sourcesContent":["/* eslint-disable no-unused-vars */\nimport * as React from 'react'\nimport JoditEditor, { JoditProps } from 'jodit-react'\n\nconst Editor = React.forwardRef((props: JoditProps, ref) => (\n  <JoditEditor ref={ref as any} {...props} />\n))\n\nexport { Editor }\n","import * as React from 'react'\n\ninterface IPreviewHtml {\n  content: any\n}\n\nconst PreviewHtml: React.FC<IPreviewHtml> = ({ content }) => {\n  return <div dangerouslySetInnerHTML={{ __html: content }} />\n}\n\nexport { PreviewHtml }\n","import React, { PureComponent } from 'react'\nimport JsPdf from 'jspdf'\nimport html2canvas from 'html2canvas'\n\nexport class Pdf extends PureComponent<any> {\n  targetRef: React.RefObject<unknown>\n  constructor(props: any) {\n    super(props)\n    this.toPdf = this.toPdf.bind(this)\n    this.targetRef = React.createRef()\n  }\n\n  async toPdf() {\n    const {\n      targetRef,\n      filename = 'download.pdf',\n      x = 0,\n      y = 0,\n      scale = 1,\n      options,\n      onComplete\n    } = this.props\n    const source = targetRef || this.targetRef\n    const targetComponent = source.current || source\n    if (!targetComponent) {\n      throw new Error(\n        'Target ref must be used or informed. See https://github.com/ivmarcos/react-to-pdf#usage.'\n      )\n    }\n    const canvas = await html2canvas(targetComponent, {\n      logging: false,\n      useCORS: true,\n      scale: scale\n    })\n    const imgData = canvas.toDataURL()\n    const pdf: any = new JsPdf(options)\n    var width = pdf.internal.pageSize.getWidth()\n    var height = pdf.internal.pageSize.getHeight()\n    pdf.addImage(imgData, 'JPEG', x, y, width, height)\n    if (onComplete) onComplete({ pdf, filename })\n  }\n\n  render() {\n    const { children }: any = this.props\n    return children({ toPdf: this.toPdf, targetRef: this.targetRef })\n  }\n}\n"],"names":["Editor","React","props","ref","JoditEditor","PreviewHtml","content","dangerouslySetInnerHTML","__html","Pdf","toPdf","bind","targetRef","createRef","filename","x","y","scale","options","onComplete","source","targetComponent","current","Error","html2canvas","logging","useCORS","canvas","imgData","toDataURL","pdf","JsPdf","width","internal","pageSize","getWidth","height","getHeight","addImage","render","children","PureComponent"],"mappings":";;;;;;;;IAIMA,MAAM,GAAGC,gBAAA,CAAiB,UAACC,KAAD,EAAoBC,GAApB;EAAA,OAC9BF,mBAAA,CAACG,WAAD;IAAaD,GAAG,EAAEA;KAAgBD,MAAlC,CAD8B;AAAA,CAAjB;;ICETG,WAAW,GAA2B,SAAtCA,WAAsC;MAAGC,eAAAA;EAC7C,OAAOL,mBAAA,MAAA;IAAKM,uBAAuB,EAAE;MAAEC,MAAM,EAAEF;;GAAxC,CAAP;AACD,CAFD;;;;;;;;;;;;;;;;;;;;;;;;;ICFaG,GAAb;EAAA;;EAEE,aAAYP,KAAZ;;;IACE,kCAAMA,KAAN;IACA,MAAKQ,KAAL,GAAa,MAAKA,KAAL,CAAWC,IAAX,+BAAb;IACA,MAAKC,SAAL,GAAiBX,cAAK,CAACY,SAAN,EAAjB;;;;EALJ;;EAAA,OAQQH,KARR;IAAA;mBAiBQ;;MARJ,mBAQI,OAAKR,KART;UACEU,SADF,gBACEA,SADF;+CAEEE,QAFF;UAEEA,QAFF,sCAEa,cAFb;wCAGEC,CAHF;UAGEA,CAHF,+BAGM,CAHN;wCAIEC,CAJF;UAIEA,CAJF,+BAIM,CAJN;4CAKEC,KALF;UAKEA,KALF,mCAKU,CALV;UAMEC,OANF,gBAMEA,OANF;UAOEC,UAPF,gBAOEA,UAPF;MASA,IAAMC,MAAM,GAAGR,SAAS,IAAI,OAAKA,SAAjC;MACA,IAAMS,eAAe,GAAGD,MAAM,CAACE,OAAP,IAAkBF,MAA1C;;MACA,IAAI,CAACC,eAAL,EAAsB;QACpB,MAAM,IAAIE,KAAJ,CACJ,0FADI,CAAN;;;6BAImBC,WAAW,CAACH,eAAD,EAAkB;QAChDI,OAAO,EAAE,KADuC;QAEhDC,OAAO,EAAE,IAFuC;QAGhDT,KAAK,EAAEA;OAHuB,kBAA1BU;QAKN,IAAMC,OAAO,GAAGD,MAAM,CAACE,SAAP,EAAhB;QACA,IAAMC,GAAG,GAAQ,IAAIC,KAAJ,CAAUb,OAAV,CAAjB;QACA,IAAIc,KAAK,GAAGF,GAAG,CAACG,QAAJ,CAAaC,QAAb,CAAsBC,QAAtB,EAAZ;QACA,IAAIC,MAAM,GAAGN,GAAG,CAACG,QAAJ,CAAaC,QAAb,CAAsBG,SAAtB,EAAb;QACAP,GAAG,CAACQ,QAAJ,CAAaV,OAAb,EAAsB,MAAtB,EAA8Bb,CAA9B,EAAiCC,CAAjC,EAAoCgB,KAApC,EAA2CI,MAA3C;QACA,IAAIjB,UAAJ,EAAgBA,UAAU,CAAC;UAAEW,GAAG,EAAHA,GAAF;UAAOhB,QAAQ,EAARA;SAAR,CAAV;;KAnCpB;MAAA;;;;EAAA,OAsCEyB,MAtCF,GAsCE;IACE,IAAQC,QAAR,GAA0B,KAAKtC,KAA/B,CAAQsC,QAAR;IACA,OAAOA,QAAQ,CAAC;MAAE9B,KAAK,EAAE,KAAKA,KAAd;MAAqBE,SAAS,EAAE,KAAKA;KAAtC,CAAf;GAxCJ;;EAAA;AAAA,EAAyB6B,mBAAzB;;;;;;"}