{"version":3,"file":"index.js","sources":["../src/components/editor.tsx","../src/components/previewHtml.tsx","../src/components/pdf.tsx"],"sourcesContent":["/* eslint-disable no-unused-vars */\nimport * as React from 'react'\n\nconst JoditEditor = React.lazy(() => {\n  return import('jodit-react')\n})\n\nconst Editor = React.forwardRef((props: any, ref) => {\n  if (typeof window === 'undefined') {\n    return null\n  }\n  return (\n    <React.Suspense fallback={<div>Loading</div>}>\n      <JoditEditor ref={ref as any} {...props} />\n    </React.Suspense>\n  )\n})\n\nexport { Editor }\n","import * as React from 'react'\n\ninterface IPreviewHtml {\n  content: any\n}\n\nconst PreviewHtml: React.FC<IPreviewHtml> = ({ content }) => {\n  return <div dangerouslySetInnerHTML={{ __html: content }} />\n}\n\nexport { PreviewHtml }\n","const domToPdf = require('dom-to-pdf')\nconst toPdf = (ref: any, options: any, cb: any) => domToPdf(ref, options, cb)\nexport const Pdf = {\n  toPdf\n}\n"],"names":["JoditEditor","React","Editor","props","ref","window","fallback","PreviewHtml","content","dangerouslySetInnerHTML","__html","domToPdf","require","toPdf","options","cb","Pdf"],"mappings":";;;;;;;;;;;;;;;;;;;;;AAGA,IAAMA,WAAW,GAAGC,UAAA,CAAW;EAC7B,OAAO,mEAAO,aAAP,OAAP;AACD,CAFmB,CAApB;IAIMC,MAAM,GAAGD,gBAAA,CAAiB,UAACE,KAAD,EAAaC,GAAb;EAC9B,IAAI,OAAOC,MAAP,KAAkB,WAAtB,EAAmC;IACjC,OAAO,IAAP;;;EAEF,OACEJ,mBAAA,CAACA,cAAD;IAAgBK,QAAQ,EAAEL,mBAAA,MAAA,MAAA,WAAA;GAA1B,EACEA,mBAAA,CAACD,WAAD;IAAaI,GAAG,EAAEA;KAAgBD,MAAlC,CADF,CADF;AAKD,CATc;;ICDTI,WAAW,GAA2B,SAAtCA,WAAsC;MAAGC,eAAAA;EAC7C,OAAOP,mBAAA,MAAA;IAAKQ,uBAAuB,EAAE;MAAEC,MAAM,EAAEF;;GAAxC,CAAP;AACD,CAFD;;ACNA,IAAMG,QAAQ,GAAGC,OAAO,CAAC,YAAD,CAAxB;;AACA,IAAMC,KAAK,GAAG,SAARA,KAAQ,CAACT,GAAD,EAAWU,OAAX,EAAyBC,EAAzB;EAAA,OAAqCJ,QAAQ,CAACP,GAAD,EAAMU,OAAN,EAAeC,EAAf,CAA7C;AAAA,CAAd;;AACA,IAAaC,GAAG,GAAG;EACjBH,KAAK,EAALA;AADiB,CAAZ;;;;;;"}